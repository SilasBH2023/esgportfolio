pip install yfinance pandas numpy matplotlib seaborn statsmodels
import yfinance as yf #Get stock/ESG date
import numpy as np #tabular data
import pandas as pd #numerical operations
import seaborn as sns #good looking plots
import matplotlib.pyplot as plt #plotting graphs
import scipy.stats as stats #Z score and correlation
import statsmodels.api as sm #Regressions, CAPM

def get_user_inputs():
    while True:
        try:
            min_score = int(input("Enter minimum ESG score (0 to 10): "))
            if 0 <= min_score <= 10:
                break
            else:
                print("Please enter a valid number between 0 and 10.")
        except ValueError:
            print("Please enter a numeric value.")
    while True:
        try:
            portfolio_size = int(input("Enter number of securities in the portfolio: "))
            if portfolio_size > 0:
                break
            else:
                print("Please enter a number greater than 0.")
        except ValueError:
            print("Please enter a numeric value.")
    return min_score, portfolio_size

if __name__ == "__main__":
    min_score, portfolio_size = get_user_inputs()
def get_user_inputs():
    while True: 
        try:
            min_risk_score = int(input("On a scale of 1-5 enter your risk aversion (5=very risk tolerant, 4=risk tolerant, 3=moderate, 2=risk adverse, 1=very risk adverse)"))
                if 1 <= min_risk_score <= 5:
                    break
                else: 
                    print("Please enter a number between 1 and 5.")
            except ValueError: 
                print("Please enter a numeric value.")
        return min_risk_score
#Translating risk aversion on the 1-5 scale into beta
risk_aversion_map = {
    1: 1.5,
    2: 1.2,
    3: 1.0,
    4: 0.8,
    5: 0.5
}

max_beta = risk_aversion_map[user_input_risk_aversion]
# Filter stocks
filtered_df = stock_df[stock_df['beta'] <= max_beta]
